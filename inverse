import numpy as np

def inverse(matrix):
    length = len(matrix)
    id = np.eye(length, dtype=float)
    matrix = np.array(matrix, dtype=float)
    for i in range(length):
        if matrix[i][i] == 0:
            for j in range(i+1, length):
                if matrix[j][i] != 0:
                    #matrix[i],matrix[j] = matrix[j],matrix[i]
                    #matrix[i], matrix[j] = matrix[j].copy(), matrix[i].copy()
                    matrix[[i, j]] = matrix[[j, i]]
                    id[[i, j]] = id[[j, i]]
                    break
            else:
                return 0
            

        pivot = matrix[i][i]
        matrix[i] = matrix[i] / pivot
        id[i] = id[i] / pivot

        
        for z in range(length):
            if z != i:
                k = matrix[z][i]
                matrix[z] = matrix[z] - k * matrix[i]
                id[z] = id[z] - k * id[i]

            
    #print(matrix)
    return(id)        






m = [ [2, 2, 1, 3],  
      [2, 2, 3, 1],  
      [1, 2, 2, 3],  
      [3, 2, 1, 3] ]

print(inverse(m))
